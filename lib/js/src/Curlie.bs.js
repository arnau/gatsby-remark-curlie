// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function isAbsolute(path) {
  return path[0] === "/";
}

var Path = /* module */[/* isAbsolute */isAbsolute];

function fromString(input) {
  var idx = input.indexOf(":");
  if (idx === -1 || input.includes("://")) {
    return undefined;
  } else {
    var prefix = input.slice(0, idx);
    var path = input.slice(idx + 1 | 0);
    var match = prefix.match((/^[a-z][a-z0-9-_.]*$/));
    if (match !== null) {
      if (path === "") {
        return /* tuple */[
                prefix,
                undefined
              ];
      } else {
        return /* tuple */[
                prefix,
                path
              ];
      }
    } else {
      return undefined;
    }
  }
}

function expand(param, catalogue) {
  var path = param[1];
  var prefix = param[0];
  var exit = 0;
  var record;
  try {
    record = List.find((function (record) {
            return record[/* prefix */0] === prefix;
          }), catalogue);
    exit = 1;
  }
  catch (exn){
    if (exn === Caml_builtin_exceptions.not_found) {
      return undefined;
    } else {
      throw exn;
    }
  }
  if (exit === 1) {
    if (path !== undefined) {
      return record[/* url */1] + path;
    } else {
      return record[/* url */1];
    }
  }
  
}

exports.Path = Path;
exports.fromString = fromString;
exports.expand = expand;
/* No side effect */
