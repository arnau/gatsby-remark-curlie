// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var RemarkCurlie$GatsbyRemarkCurlie = require("../src/RemarkCurlie.bs.js");

describe("RemarkCurlie.default", (function () {
        var config = (
    {"db": [
      {"id": "example", "url": "https://example.org/"}
    ]}
  );
        Jest.test("baseline", (function () {
                var tree = (
      {
        "type": "link",
        "url": "example:foo",
      }
    );
                var expected = (
      {
        "type": "link",
        "url": "https://example.org/foo",
        "title": "[example]"
      }
    );
                return Jest.Expect[/* toEqual */12](expected, Jest.Expect[/* expect */0](RemarkCurlie$GatsbyRemarkCurlie.$$default(tree, config)));
              }));
        Jest.test("bad catalogue throws", (function () {
                var tree = (
      {
        "type": "link",
        "url": "foo:bar",
      }
    );
                return Jest.Expect[/* toThrow */18](Jest.Expect[/* expect */0]((function () {
                                  return RemarkCurlie$GatsbyRemarkCurlie.$$default(tree, config);
                                })));
              }));
        Jest.test("absolute url is untouched", (function () {
                var tree = (
      {
        "type": "link",
        "url": "https://example.org/foo",
      }
    );
                return Jest.Expect[/* toEqual */12](tree, Jest.Expect[/* expect */0](RemarkCurlie$GatsbyRemarkCurlie.$$default(tree, config)));
              }));
        Jest.test("absolute url is untouched (no protocol)", (function () {
                var tree = (
      {
        "type": "link",
        "url": "/foo",
      }
    );
                return Jest.Expect[/* toEqual */12](tree, Jest.Expect[/* expect */0](RemarkCurlie$GatsbyRemarkCurlie.$$default(tree, config)));
              }));
        return Jest.test("relative url is untouched", (function () {
                      var tree = (
      {
        "type": "link",
        "url": "./foo",
      }
    );
                      return Jest.Expect[/* toEqual */12](tree, Jest.Expect[/* expect */0](RemarkCurlie$GatsbyRemarkCurlie.$$default(tree, config)));
                    }));
      }));

/*  Not a pure module */
